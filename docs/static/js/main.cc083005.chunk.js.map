{"version":3,"sources":["firebase/firebase-config.js","types/types.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/ui.js","actions/auth.js","components/hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/JournalRouter.js","routers/AppRouter.js","reducers/authReducer.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","activeNote","note","type","payload","addNewNote","setNotes","startSaveNotes","dispatch","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","console","log","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","history","increment","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","location","match","alto","pTag","useRef","mystyle","height","ref","style","TransitionGroup","CSSTransition","timeout","enter","exit","classNames","exact","path","component","pathname","NotesAppBar","active","display","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useEffect","current","delete","startDeleting","NothingSelected","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","JournalRouter","withRouter","currentKey","split","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","replace","setTimeout","initialstate","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"iNAcEA,IAASC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,0CACZC,UAAW,0BACXC,cAAe,sCACfC,kBAAmB,eACnBC,MAAO,8CAMT,IAAMC,EAAKR,IAASS,YACdC,EAAqB,IAAIV,IAASW,KAAKC,mB,kECjBlCC,EACF,eADEA,EAED,gBAFCA,EAIG,iBAJHA,EAKM,oBALNA,EAOO,qBAPPA,EAQQ,sBARRA,EAUC,eAVDA,EAWE,gBAXFA,EAaI,mBAbJA,EAcI,0BAdJA,EAeE,oBAfFA,EAgBK,sBAhBLA,EAkBI,uBAlBJA,EAmBY,0B,OCjBZC,EAAU,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,4DAEL,kDAEXC,EAAW,IAAIC,UAEZC,OAAO,gBAAgB,iBAChCF,EAASE,OAAO,OAAQJ,GAPF,kBAUCK,MARN,iDAQsB,CAC/BC,OAAQ,OACRC,KAAML,IAZQ,YAUZM,EAVY,QAeRC,GAfQ,kCAgBUD,EAAKE,OAhBf,eAgBRC,EAhBQ,yBAiBPA,EAAUC,YAjBH,yBAmBFJ,EAAKE,OAnBH,oJAAH,sDCAVG,EAAS,uCAAG,WAAQC,GAAR,iBAAAb,EAAA,sEAEGR,EAAGsB,WAAH,UAAiBD,EAAjB,mBAAsCE,MAFzC,cAEfC,EAFe,OAIfC,EAAQ,GAIdD,EAAUE,SAAS,SAAAC,GAEfF,EAAMG,KAAN,aACIC,GAAIF,EAASE,IACVF,EAASG,YAZC,kBAkBdL,GAlBc,2CAAH,sDCyBTM,EAAa,SAAEF,EAAIG,GAAN,MAAiB,CACvCC,KAAM5B,EACN6B,QAAQ,aACJL,MACGG,KAIEG,EAAa,SAAEN,EAAGG,GAAL,MAAgB,CACtCC,KAAM5B,EACN6B,QAAQ,aACJL,MAAOG,KAWFI,EAAW,SAAEX,GAAF,MAAc,CAElCQ,KAAM5B,EACN6B,QAAST,IAIAY,EAAiB,SAAEL,GAC5B,8CAAO,WAAOM,EAAUC,GAAjB,iBAAA/B,EAAA,6DACGa,EAAMkB,IAAWpC,KAAKkB,IACtBW,EAAKQ,YACAR,EAAKQ,WAEVC,EALH,eAK0BT,IACNH,GANpB,SAQG7B,EAAG0C,IAAH,UAAUrB,EAAV,0BAAgCW,EAAKH,KAAOc,OAAQF,GARvD,OAUHH,EAASM,EAAaZ,EAAKH,GAAIY,IAE/BI,IAAKC,KAAK,QAASd,EAAKe,MAAO,WAZ5B,2CAAP,yDAgBSH,EAAc,SAAEf,EAAIG,GAAN,MAAkB,CACzCC,KAAM5B,EACN6B,QAAS,CACLL,KACAG,KAAK,aACDH,MACGG,MA8CFgB,EAAa,SAAEnB,GAAF,MAAW,CACjCI,KAAM5B,EACN6B,QAASL,IC5HAoB,EAAW,SAAEC,GAAF,MAAY,CAEhCjB,KAAM5B,EACN6B,QAASgB,IAQAC,EAAgB,iBAAO,CAEhClB,KAAM5B,ICTG+C,EAA0B,SAACC,EAAOC,GAC3C,OAAO,SAAChB,GAEJA,EDQ2B,CAE/BL,KAAM5B,ICRFb,IAASW,OAAOoD,2BAA4BF,EAAOC,GAClDE,KADD,uCACO,6BAAAhD,EAAA,sDAAQiD,EAAR,EAAQA,KAEXnB,EAASoB,EAAOD,EAAKpC,IAAKoC,EAAKE,cAC/BrB,EAAUa,KAHP,2CADP,uDAOES,OAAO,SAAAC,GACLC,QAAQC,IAAIF,GACZvB,EAAUa,KACVN,IAAKC,KAAK,QAASe,EAAEG,QAAS,cAuC7BN,EAAQ,SAACrC,EAAKsC,GAAN,MAAuB,CAExC1B,KAAK5B,EACL6B,QAAS,CACLb,MAAIsC,iBAaCM,EAAS,iBAAO,CACzBhC,KAAK5B,I,QC5EI6D,EAAU,WAA0B,IAAxBC,EAAuB,uDAAR,GAEpC,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WAAoC,IAAlCC,EAAiC,uDAAlBL,EAC3BG,EAAWE,IAITC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBJ,EAAU,2BACHD,GADE,kBAEHK,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEP,EAAQI,EAAmBF,I,OCb3BM,EAAc,WAEvB,IAAMvC,EAAWwC,cAETC,EAAYC,aAAa,SAAAC,GAAK,OAAIA,EAAMC,MAAxCH,QAER,EAAyCb,EAAQ,CAC7Cb,MAAM,kBACNC,SAAU,WAFd,mBAAQ6B,EAAR,KAAoBV,EAApB,KAKQpB,EAAmB8B,EAAnB9B,MAAOC,EAAY6B,EAAZ7B,SAWf,OACI,sBAAK8B,UAAU,WAAf,UAGG,oBAAIA,UAAU,cAAd,mBAEA,uBAAMC,SAfO,SAACxB,GACjBA,EAAEyB,iBACFhD,EAAUc,EAAwBC,EAAOC,KAatC,UACK,uBACA8B,UAAU,cACNnD,KAAK,OACLsD,YAAY,QACZZ,KAAK,QACLa,aAAa,MACbZ,MAAQvB,EACRoC,SAAWhB,IAGf,uBACAW,UAAU,cACNnD,KAAK,WACLsD,YAAY,WACZZ,KAAK,WACLC,MAAQtB,EACRmC,SAAWhB,IAGf,wBACIxC,KAAK,SACLmD,UAAU,4BACVM,SAAWX,EAHf,mBAQA,sBAAKK,UAAU,wBAAf,UACI,0DAEA,sBAAKA,UAAU,aAAaO,QAzClB,WACtBrD,GFqBG,SAAEA,GAEL9C,IAASW,OAAOyF,gBAAiB1F,GAC5BsD,MAAM,YAAe,IAAZC,EAAW,EAAXA,KACNnB,EACIoB,EAAOD,EAAKpC,IAAKoC,EAAKE,qBEctB,UACI,qBAAKyB,UAAU,sBAAf,SACI,qBAAKA,UAAU,cAAcS,IAAI,8EAA8EC,IAAI,oBAEvH,mBAAGV,UAAU,WAAb,SACI,4DAIZ,cAAC,IAAD,CAAMW,GAAG,iBAAiBX,UAAU,OAApC,yC,kBCrEHY,GAAiB,SAAC,GAAwB,EAAvBC,QAAuB,EAAfC,UAAgB,IAE9C5D,EAAWwC,cAETqB,EAAanB,aAAa,SAAAC,GAAK,OAAIA,EAAMC,MAAzCiB,SAGR,EAAyCjC,EAAQ,CAC7CS,KAAM,QACNtB,MAAM,kBACNC,SAAU,SACV8C,UAAW,WAJf,mBAAQjB,EAAR,KAAoBV,EAApB,KAOQE,EAAqCQ,EAArCR,KAAMtB,EAA+B8B,EAA/B9B,MAAOC,EAAwB6B,EAAxB7B,SAAU8C,EAAcjB,EAAdiB,UASzBC,EAAc,WAEhB,OAA2B,IAAtB1B,EAAK2B,OAAOC,QACbjE,EAAUW,EAAS,sBAEZ,GAGAuD,KAAUC,QAASpD,GAKrBC,IAAa8C,GAAa9C,EAASiD,OAAS,GACjDjE,EAAUW,EAAS,kEACZ,IAEXX,EJtC+B,CAEnCL,KAAM5B,KIqCK,IATHiC,EAAUW,EAAS,wBACZ,IAYf,OACI,sBAAKmC,UAAU,WAAf,UAGG,oBAAIA,UAAU,cAAd,sBAEA,uBAAMC,SAnCU,SAACxB,GACpBA,EAAEyB,iBACGe,KACD/D,EHEsC,SAAEe,EAAOC,EAAUqB,GACjE,OAAO,SAACrC,GACJ9C,IAASW,OAAOuG,+BAAgCrD,EAAOC,GACtDE,KADD,uCACO,6BAAAhD,EAAA,6DAAQiD,EAAR,EAAQA,KAAR,SAEGA,EAAKkD,cAAc,CAAEhD,YAAYgB,IAFpC,OAKHrC,EACIoB,EAAOD,EAAKpC,IAAKoC,EAAKE,cANvB,2CADP,uDAUEC,OAAO,SAAAC,GACLC,QAAQC,IAAIF,GACZhB,IAAKC,KAAK,QAASe,EAAEG,QAAS,aGhBpB4C,CAAoCvD,EAAMC,EAASqB,KAgC9D,UAGQwB,GAEK,qBAAKf,UAAU,oBAAf,SACCe,IAKT,uBACIf,UAAU,cACVnD,KAAK,OACLsD,YAAY,OACZZ,KAAK,OACLa,aAAa,MACbZ,MAAQD,EACRc,SAAWhB,IAGf,uBACIW,UAAU,cACVnD,KAAK,OACLsD,YAAY,QACZZ,KAAK,QACLa,aAAa,MACbZ,MAAQvB,EACRoC,SAAWhB,IAGf,uBACIW,UAAU,cACVnD,KAAK,WACLsD,YAAY,WACZZ,KAAK,WACLC,MAAQtB,EACRmC,SAAWhB,IAGf,uBACIW,UAAU,oBACVnD,KAAK,WACLsD,YAAY,mBACZZ,KAAK,YACLC,MAAQwB,EACRX,SAAWhB,IAGf,wBACIxC,KAAK,SACLmD,UAAU,iCAFd,sBAQA,cAAC,IAAD,CAAMW,GAAG,cAAcX,UAAU,OAAjC,wCC7GHyB,GAAa,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,SAASC,EAAW,EAAXA,MAKjC,EAAgB3C,qBAAT4C,EAAP,oBAIMC,EAAOC,mBASPC,EAAU,CACZC,OAAQJ,GAGZ,OACI,qBAAK5B,UAAU,sBAAf,SACI,qBAAKiC,IAAKJ,EAAMK,MAAOH,EAAS/B,UAAU,sBAA1C,SAEI,cAACmC,EAAA,EAAD,CAAiBnC,UAAU,eAA3B,SAEI,cAACoC,EAAA,EAAD,CACAC,QA1BA,CAAEC,MAAO,KAAMC,KAAM,MA2BrBC,WAAW,OAFX,SAMI,eAAC,IAAD,CAAQd,SAAUA,EAAlB,UACI,cAAC,IAAD,CAAOe,OAAK,EAACC,KAAI,UAAKf,EAAMvE,IAAX,UAAwBuF,UAAWlD,IAEpD,cAAC,IAAD,CAAOgD,OAAK,EAACC,KAAI,UAAKf,EAAMvE,IAAX,aAA2BuF,UAAW/B,KAEvD,cAAC,IAAD,CAAUD,GAAG,oBARhBe,EAASkB,iBCjCrBC,GAAc,WAEvB,IAAM3F,EAAWwC,cACToD,EAAWlD,aAAY,SAAAC,GAAK,OAAIA,EAAMxD,SAAtCyG,OAiBR,OACI,sBAAK9C,UAAU,gBAAf,UACI,qDACA,uBACIvD,GAAG,eACHI,KAAK,OACL0C,KAAK,OACL2C,MAAO,CAAEa,QAAS,QAClB1C,SAfa,SAAC5B,GACtB,IAAMtD,EAAOsD,EAAEa,OAAO0D,MAAM,GACvB7H,GACD+B,EPiEkB,SAAE/B,GAC5B,8CAAO,WAAO+B,EAAUC,GAAjB,iBAAA/B,EAAA,6DAEYuB,EAAeQ,IAAWd,MAAjCyG,OAERrF,IAAKC,KAAK,CACNC,MAAO,eACPsF,KAAM,iBACNC,mBAAmB,EACnBC,mBAAmB,EACnBC,SAAU,WACN3F,IAAK4F,iBAVV,SAcmBnI,EAAYC,GAd/B,OAcGmI,EAdH,OAgBH5E,QAAQC,IAAI2E,GAEZ3G,EAAWS,IAAMkG,EAEjBpG,EAAUD,EAAgBN,IAE1Bc,IAAK8F,QAtBF,2CAAP,wDOlEkBC,CAAgBrI,OAc1B,gCACI,wBACI6E,UAAU,MACVO,QAxBW,WACvBkD,SAASC,cAAc,iBAAiBC,SAqBhC,qBAOA,wBAAQ3D,UAAU,MAAMO,QAjCjB,WACfrD,EAAUD,EAAgB6F,KAgClB,yBCpCHc,GAAa,WAEtB,IAAM1G,EAAWwC,cAEF9C,EAASgD,aAAY,SAAAC,GAAK,OAAIA,EAAMxD,SAA3CyG,OACR,EAAgDhE,EAASlC,GAAzD,mBAAQmD,EAAR,KAAoBV,EAApB,KAAuCF,EAAvC,KACQzD,EAAoBqE,EAApBrE,KAAMiC,EAAcoC,EAAdpC,MAAOlB,EAAOsD,EAAPtD,GAEfoH,EAAW/B,iBAAQlF,EAAKH,IAG9BqH,qBAAU,WAEDlH,EAAKH,KAAOoH,EAASE,UACtB5E,EAAOvC,GACPiH,EAASE,QAAUnH,EAAKH,MAG7B,CAACG,EAAMuC,IAEV2E,qBAAU,WACN5G,EAAUP,EAAYoD,EAAWtD,GAAb,eAAqBsD,OAC1C,CAACA,EAAY7C,IAMhB,OACI,sBAAK8C,UAAU,sBAAf,UACI,cAAC,GAAD,IAEA,sBAAKA,UAAU,iBAAf,UAEI,uBACInD,KAAK,OACLsD,YAAY,qBACZH,UAAU,qBACVI,aAAa,MACbZ,MAAO7B,EACP4B,KAAK,QACLc,SAAUhB,IAGd,0BACIc,YAAY,sBACZH,UAAU,kBACVR,MAAO9D,EACP6D,KAAK,OACLc,SAAUhB,IAITzC,EAAKQ,KAEL,qBAAK4C,UAAU,eAAf,SACG,qBACIS,IAAK7D,EAAKQ,IACVsD,IAAI,gBAOpB,wBACIV,UAAU,iBACVO,QA3CS,WACjBrD,ERoFqB,SAAET,GAC3B,8CAAO,WAAOS,EAAUC,GAAjB,eAAA/B,EAAA,6DAEGa,EAAMkB,IAAWpC,KAAKkB,IAFzB,SAGGrB,EAAG0C,IAAH,UAAUrB,EAAV,0BAAgCQ,IAAOuH,SAH1C,OAKH9G,EAAUU,EAAYnB,IALnB,2CAAP,wDQrFawH,CAAexH,KAwCpB,wBCrECyH,GAAkB,WAC3B,OACI,sBAAKlE,UAAU,wBAAf,UACI,gDAEI,uBAFJ,wBAMA,mBAAGA,UAAU,+B,oBCJZmE,GAAe,SAAC,GAAoC,IAAlC1H,EAAiC,EAAjCA,GAAI2H,EAA6B,EAA7BA,KAAMzG,EAAuB,EAAvBA,MAAOjC,EAAgB,EAAhBA,KAAM0B,EAAU,EAAVA,IAE5CiH,EAAWC,KAAOF,GAElBlH,EAAWwC,cAQjB,OAGI,sBAAKM,UAAU,yBAAyBO,QATnB,WACrBrD,EAASP,EAAWF,EAAG,CACnB2H,OAAMzG,QAAOjC,OAAM0B,UAOvB,UAEQA,GACA,qBACA4C,UAAU,yBACVkC,MAAO,CACHqC,eAAe,QACfC,gBAAgB,OAAD,OAASpH,EAAT,QAIvB,sBAAK4C,UAAU,sBAAf,UACI,mBAAGA,UAAU,uBAAb,SACKrC,IAEL,mBAAGqC,UAAU,yBAAb,SACKtE,OAGT,sBAAKsE,UAAU,0BAAf,UACI,+BAAQqE,EAASI,OAAO,UACxB,6BAAMJ,EAASI,OAAO,eCtCzBC,GAAiB,WAE1B,IAAQrI,EAAUuD,aAAY,SAAAC,GAAK,OAAIA,EAAMxD,SAArCA,MAGR,OAEI,qBAAK2D,UAAU,mBAAf,SACI,cAACmC,EAAA,EAAD,UAEK9F,EAAMsI,KAAK,SAAA/H,GAAI,OACZ,cAACwF,EAAA,EAAD,CAEAC,QAAS,IACTG,WAAW,OAHX,SAKC,cAAC,GAAD,eAEK5F,GADCA,EAAKH,KALPG,EAAKH,YCXjBmI,GAAU,WAEnB,IAAM1H,EAAWwC,cAETH,EAASK,aAAY,SAAAC,GAAK,OAAIA,EAAM9E,QAApCwE,KAUR,OACI,wBAAOS,UAAU,mBAAjB,UACI,sBAAKA,UAAU,0BAAf,UACI,qBAAIA,UAAU,OAAd,UACI,mBAAGA,UAAU,gBACb,+BAAQT,OAGZ,wBACIgB,QAjBK,WACjBrD,EVyDJ,uCAAO,WAAOA,GAAP,SAAA9B,EAAA,sEACGhB,IAASW,OAAO8J,UADnB,OAGH3H,EAAU2B,KACV3B,EFwD0B,CAC9BL,KAAM5B,IE7DC,2CAAP,wDUxCgB+E,UAAU,MAFd,uBAOA,sBAAKA,UAAU,qBAAqBO,QAnB3B,WACjBrD,EZVJ,uCAAO,WAAQA,EAAUC,GAAlB,mBAAA/B,EAAA,6DAEGa,EAAMkB,IAAWpC,KAAKkB,IAEtB6I,EAAU,CACZnH,MAAO,GACPjC,KAAM,GACN0I,MAAM,IAAIW,MAAOC,WAPlB,SAUepK,EAAGsB,WAAH,UAAkBD,EAAlB,mBAAwCgJ,IAAKH,GAV5D,OAUGxH,EAVH,OAYHJ,EAAUP,EAAYW,EAAIb,GAAIqI,IAC9B5H,EAAUH,EAAYO,EAAIb,GAAIqI,IAb3B,2CAAP,0DY4BY,UACI,mBAAG9E,UAAU,+BACb,mBAAGA,UAAU,OAAb,0BAGR,cAAC,GAAD,QCjCCkF,GAAgB,SAAC,GAAc,EAAbrE,QAAc,IAEjC9F,EAAS6E,aAAa,SAAAC,GAAK,OAAIA,EAAMC,MAArC/E,KACA+H,EAAUlD,aAAa,SAAAC,GAAK,OAAIA,EAAMxD,SAAtCyG,OAGR,OACI,qBAAK9C,UAAU,iCAAf,SACKjF,EAEG,qCACJ,cAAC,GAAD,IAEA,+BAGS+H,EACC,cAAC,GAAD,IACA,cAAC,GAAD,SASN,gCCzBHqC,GAAgB,SAAC,GAAsB,IAArBzD,EAAoB,EAApBA,SAASC,EAAW,EAAXA,MAapC,OAGY,cAACQ,EAAA,EAAD,CAAiBnC,UAAU,WAA3B,SAEI,cAACoC,EAAA,EAAD,CACAC,QAhBA,CAAEC,MAAO,KAAMC,KAAM,MAiBrBC,WAAW,OAFX,SAMI,eAAC,IAAD,CAAQd,SAAUA,EAAlB,UAIQ,cAAC,IAAD,CAAOe,OAAK,EAACC,KAAI,UAAKf,EAAMvE,IAAX,SAAuBuF,UAAWuC,KACnD,cAAC,IAAD,CAAOzC,OAAK,EAACC,KAAI,UAAKf,EAAMvE,IAAX,SAAuBuF,UAAWuC,KACnD,cAAC,IAAD,CAAUvE,GAAE,UAAKgB,EAAMvE,IAAX,eATnBsE,EAASkB,aC8CnBwC,gBA1DG,SAAC,GAA8B,IAA7B1D,EAA4B,EAA5BA,SAASC,EAAmB,EAAnBA,MAAMd,EAAa,EAAbA,QAGzBwE,EAAa3D,EAASkB,SAAS0C,MAAM,KAAK,IAAM,IAGhDpI,EAAWwC,cAEjB,EAAgCV,oBAAS,GAAzC,mBAAOuG,EAAP,KAAiBC,EAAjB,KACA,EAAoCxG,oBAAS,GAA7C,mBAAOyG,EAAP,KAAmBC,EAAnB,KAuBA,OAnBA5B,qBAAU,WACN1J,IAASW,OAAO4K,oBAAoB,SAACtH,GfUZ,IAAEpC,GeTvB,OAAKoC,QAAL,IAAKA,OAAL,EAAKA,EAAMpC,MACPiB,EAAUoB,EAAOD,EAAKpC,IAAKoC,EAAKE,cAChCmH,GAAe,GACf7E,EAAQ+E,QAAR,UAAmBjE,EAAMvE,IAAzB,iBACAF,Edda,CAEzBL,KAAM5B,IcaMiC,GfImBjB,EeJSoC,EAAKpC,IfK7C,uCAAO,WAAQiB,GAAR,eAAA9B,EAAA,sEACiBY,EAAWC,GAD5B,OACGI,EADH,OAEHa,EAASF,EAAUX,IAFhB,2CAAP,0DeHYqJ,GAAe,GACf7E,EAAQ+E,QAAQ,eAChBC,YAAW,WACP3I,EdhBU,CAE1BL,KAAM5B,MceS,OAEPuK,GAAY,QAEjB,CAAEtI,EAAUsI,EAAaE,EAAe7E,EAAQc,EAAMvE,MAEpDmI,EAEG,2CAMI,cAACpD,EAAA,EAAD,CAAiBnC,UAAU,eAA3B,SACI,cAACoC,EAAA,EAAD,CACAC,QAtCA,CAAEC,MAAO,KAAMC,KAAM,MAuCrBC,WAAW,OAFX,SAMQ,eAAC,IAAD,CAAQd,SAAUA,EAAlB,UACI,cAAC,IAAD,CAAOgB,KAAI,UAAKf,EAAMvE,IAAX,WAAyBqI,WAAYA,EAAY9C,UAAWwC,KACvE,cAAC,IAAD,CAAOzC,KAAI,UAAKf,EAAMvE,IAAX,QAAqBuF,UAAWlB,KAC3C,cAAC,IAAD,CAAUd,GAAG,oBANpB0E,Q,SC3DnBtG,GAAe,CACjBhE,MAAM,G,SCAJgE,GAAe,CACjBY,SAAS,EACToB,SAAU,KACVhG,MAAK,G,SCJH+K,GAAe,CACjBzJ,MAAO,GACPyG,OAAQ,MCCNiD,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAErGC,GAAWC,aAAgB,CAC7BrL,KHFuB,WAAmC,IAAjC8E,EAAgC,uDAAzBd,GAAcsH,EAAW,uCACzD,OAAQA,EAAOxJ,MACX,KAAK5B,EAED,MAAO,CACHgB,IAAKoK,EAAOvJ,QAAQb,IACpBsD,KAAM8G,EAAOvJ,QAAQyB,aAE7B,KAAKtD,EAEG,OAAO8D,GAEf,QACI,OAAOc,IGVfC,GFDqB,WAAsC,IAApCD,EAAmC,uDAA3Bd,GAAcsH,EAAa,uCAE1D,OAASA,EAAOxJ,MACZ,KAAK5B,EACD,OAAO,2BACA4E,GADP,IAEIkB,SAAUsF,EAAOvJ,UAEzB,KAAK7B,EACD,OAAO,2BACA4E,GADP,IAEIkB,SAAU,OAEd,KAAK9F,EACD,OAAO,2BACA4E,GADP,IAEIF,SAAS,IAEjB,KAAK1E,EACL,OAAO,2BACA4E,GADP,IAEIF,SAAS,IAEb,KAAK1E,EACL,OAAO,2BACA4E,GADP,IAEI9E,MAAM,IAEV,KAAKE,EACL,OAAO,2BACA4E,GADP,IAEI9E,MAAM,IAId,QACI,OAAO8E,IElCfxD,MDHwB,WAAqC,IAAnCwD,EAAkC,uDAA1BiG,GAAcO,EAAY,uCAE5D,OAAQA,EAAOxJ,MAEX,KAAK5B,EACD,OAAO,2BACA4E,GADP,IAEIiD,OAAO,eACAuD,EAAOvJ,WAItB,KAAK7B,EACD,OAAO,2BACA4E,GADP,IAEIxD,MAAM,CAAGgK,EAAOvJ,SAAX,oBAAuB+C,EAAMxD,UAG1C,KAAKpB,EACD,OAAO,2BACA4E,GADP,IAEIxD,MAAM,aAAMgK,EAAOvJ,WAG3B,KAAK7B,EACD,OAAO,2BACA4E,GADP,IAEIxD,MAAOwD,EAAMxD,MAAMsI,KACf,SAAA/H,GAAI,OAAIA,EAAKH,KAAO4J,EAAOvJ,QAAQL,GAC7B4J,EAAOvJ,QAAQF,KACfA,OAIlB,KAAK3B,EACD,OAAO,2BACA4E,GADP,IAEIiD,OAAQ,KACRzG,MAAOwD,EAAMxD,MAAMiK,QAAQ,SAAA1J,GAAI,OAAIA,EAAKH,KAAO4J,EAAOvJ,aAE9D,KAAK7B,EACD,OAAO,2BACA4E,GADP,IAEIiD,OAAQ,KACRzG,MAAO,KAGf,QACI,OAAOwD,MC1CN0G,GAAQC,aACjBL,GACAJ,GACIU,aAAiBC,QCXZC,GAAa,WACtB,OAEQ,cAAC,IAAD,UACI,cAAC,IAAD,CAAUJ,MAAQA,GAAlB,SACI,cAAC,GAAD,SCLpBK,IAASC,OAEL,cAAC,GAAD,IAEFpD,SAASqD,eAAe,U","file":"static/js/main.cc083005.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBvVZPqC2mLogz7YWTNb2ZWSEw4StdtFjU\",\n    authDomain: \"react-app-journal-7ddf7.firebaseapp.com\",\n    projectId: \"react-app-journal-7ddf7\",\n    storageBucket: \"react-app-journal-7ddf7.appspot.com\",\n    messagingSenderId: \"651991573957\",\n    appId: \"1:651991573957:web:42a23e6e418a56406e17ac\"\n  };\n\n\n  firebase.initializeApp(firebaseConfig);\n\n  const db = firebase.firestore();\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\n  export {\n      db,\n      googleAuthProvider,\n      firebase\n  }\n\n","export const types = {\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    uiIsAuth: '[UI] Is Auth',\n    uiNotAuth: '[UI] Not Auth',\n\n    notesAddNew: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load note',\n    notesUpdated: '[Notes] Update note',\n    notesFileUrl: '[Notes] Update image',\n    notesDelete: '[Notes] Delete image',\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\n}","\n\nexport const fileUpload = async( file ) => {\n    \n    const cloudUrl = 'https://api.cloudinary.com/v1_1/kyoroth/upload'\n\n    const formData = new FormData();\n\n    formData.append('upload_preset','react-journal')\n    formData.append('file', file );\n\n    try {\n        const resp = await fetch( cloudUrl,{\n            method: 'POST',\n            body: formData\n        });\n\n        if ( resp.ok ) {\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        } else {\n            throw await resp.json();\n        }\n\n    } catch (error) {\n        throw error;\n    }\n     \n}\n","import { db } from \"../firebase/firebase-config\"\n\nexport const loadNotes = async ( uid ) => {\n\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\n\n    const notes = [];\n\n    \n\n    notesSnap.forEach( snapHijo => {\n        \n        notes.push({\n            id: snapHijo.id,\n            ...snapHijo.data()\n        })\n    });\n    \n    // console.log(notes);\n\n    return notes;\n\n}","import Swal from \"sweetalert2\";\nimport { db } from \"../firebase/firebase-config\";\nimport { fileUpload } from \"../helpers/fileUpload\";\nimport { loadNotes } from \"../helpers/loadNotes\";\nimport { types } from '../types/types';\n\nexport const startNewNote = () => {\n    return async ( dispatch, getState ) => {\n\n        const uid = getState().auth.uid;\n        \n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n        \n        const doc = await db.collection(`${ uid }/journal/notes`).add( newNote )\n\n        dispatch( activeNote( doc.id, newNote ) );\n        dispatch( addNewNote( doc.id, newNote ) );\n\n        \n        \n    }\n}\n\nexport const activeNote = ( id, note ) => ({\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n});\n\nexport const addNewNote = ( id,note ) => ({\n    type: types.notesAddNew,\n    payload:{\n        id, ...note\n    }\n})\n\nexport const startLoadingNotes = ( uid ) => {\n    return async ( dispatch ) => {\n        const notes = await loadNotes( uid );\n        dispatch(setNotes( notes ))\n    }\n}\n\nexport const setNotes = ( notes ) => ({\n\n    type: types.notesLoad,\n    payload: notes\n\n})\n\nexport const startSaveNotes = ( note ) => {\n    return async( dispatch, getState ) => {\n        const uid = getState().auth.uid;\n        if ( !note.url ){\n            delete note.url;\n        }\n        const noteToFirestore = { ...note };\n        delete noteToFirestore.id;\n\n        await db.doc(`${uid}/journal/notes/${ note.id }`).update( noteToFirestore );\n\n        dispatch(refreshNote( note.id, noteToFirestore ));\n\n        Swal.fire('Saved', note.title, 'success');\n    }\n}\n\nexport const refreshNote = ( id, note  ) => ({\n    type: types.notesUpdated,\n    payload: {\n        id,\n        note:{\n            id,\n            ...note\n        }\n    }\n})\n\n\nexport const startUploading = ( file ) => {\n    return async( dispatch, getState ) => {\n\n        const { active:activeNote } = getState().notes;\n\n        Swal.fire({\n            title: 'Uploading...',\n            text: 'Please wait...',\n            allowOutsideClick: false,\n            showConfirmButton: false,\n            willOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        const fileUrl = await fileUpload( file );\n\n        console.log(fileUrl)\n\n        activeNote.url = fileUrl;\n\n        dispatch( startSaveNotes( activeNote))\n\n        Swal.close();\n\n        \n\n    }\n}\n\nexport const startDeleting = ( id ) => {\n    return async( dispatch, getState ) => {\n        \n        const uid = getState().auth.uid;\n        await db.doc(`${uid}/journal/notes/${ id }`).delete();\n\n        dispatch( deleteNote( id ) );\n    }\n}\n\nexport const deleteNote = ( id ) => ({\n    type: types.notesDelete,\n    payload: id\n})\n\nexport const notesLogout = () => ({\n    type: types.notesLogoutCleaning,\n    \n})\n\n","\nimport { types } from '../types/types'\n\nexport const setError = ( err ) => ({\n    \n    type: types.uiSetError,\n    payload: err\n});\n\nexport const removeError = ( err ) => ({\n    \n    type: types.uiRemoveError\n});\n\nexport const finishLoading = () => ({\n    \n    type: types.uiFinishLoading\n});\nexport const startLoading = () => ({\n    \n    type: types.uiStartLoading\n});\n\nexport const isAuth = () => ({\n    \n    type: types.uiIsAuth\n});\nexport const notAuth = () => ({\n    \n    type: types.uiNotAuth\n});\n\n\n\n","\nimport Swal from 'sweetalert2'\nimport { firebase, googleAuthProvider, } from '../firebase/firebase-config';\nimport { types } from \"../types/types\";\nimport { notesLogout } from './notes';\nimport { finishLoading,startLoading } from './ui';\n\nexport const startLoginEmailPassword = (email, password ) => {\n    return (dispatch) => {\n\n        dispatch( startLoading() );\n\n        firebase.auth().signInWithEmailAndPassword( email, password )\n        .then( async({ user }) => {\n            \n            dispatch(login( user.uid, user.displayName));\n            dispatch( finishLoading() );\n            \n        })\n         .catch( e => {\n            console.log(e);\n            dispatch( finishLoading() );\n            Swal.fire('Error', e.message, 'error');\n         })\n         \n    }\n}\n\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => {\n    return (dispatch ) => {\n        firebase.auth().createUserWithEmailAndPassword( email, password )\n        .then( async({ user }) => {\n            \n            await user.updateProfile({ displayName:name })\n\n            \n            dispatch(\n                login( user.uid, user.displayName)\n            )\n        })\n         .catch( e => {\n            console.log(e)\n            Swal.fire('Error', e.message, 'error');\n         })\n    }\n}\n\nexport const startGoogleLogin = () => {\n    return ( dispatch ) => {\n\n        firebase.auth().signInWithPopup( googleAuthProvider )\n            .then( ({ user }) => {\n                dispatch(\n                    login( user.uid, user.displayName)\n                )\n            })\n\n    }\n}\n\n\nexport const login = (uid, displayName) => ({\n\n    type:types.login,\n    payload: {\n        uid,displayName\n    }\n});\n\nexport const StartLogout = () => {\n    return async( dispatch ) => {\n        await firebase.auth().signOut();\n\n        dispatch( logout() );\n        dispatch( notesLogout() );\n    }\n};\n\nexport const logout = () => ({\n    type:types.logout\n});\n\n \n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = ( newFormState = initialState ) => {\n        setValues( newFormState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Link } from 'react-router-dom';\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { useForm } from '../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    \n    const { loading } = useSelector( state => state.ui );\n    \n    const [ formValues, handleInputChange] = useForm({\n        email:'jorge@gmail.com',\n        password: '123456'\n    });\n    \n    const { email, password} = formValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch( startLoginEmailPassword(email, password) );\n    }\n\n    const handleGoogleLogin = () => {\n        dispatch( startGoogleLogin() )\n    }\n\n    return (\n        <div className=\"relative\">\n            \n                \n           <h3 className=\"auth__title\">Login</h3>\n\n           <form onSubmit={ handleLogin }>\n                <input\n                className=\"auth__input\"\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                className=\"auth__input\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={ loading }\n                >\n                    Login\n                </button>\n           \n                <div className=\"auth__social-networks\">\n                    <p>Login whit Social Network</p>\n\n                    <div className=\"google-btn\" onClick={handleGoogleLogin}>\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n                <Link to=\"/auth/register\" className=\"link\">\n                    Create a new account\n                </Link>\n           </form>\n\n                </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../hooks/useForm';\nimport validator from 'validator'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeError, setError } from '../../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\nexport const RegisterScreen = ({history,increment}) => {\n\n    const dispatch = useDispatch();\n\n    const { msgError } = useSelector( state => state.ui );\n    \n\n    const [ formValues, handleInputChange] = useForm({\n        name: 'Jorge',\n        email:'jorge@gmail.com',\n        password: '123456',\n        password2: '123456'\n    });\n\n    const { name, email, password, password2 } = formValues;\n   \n    const handleRegister = (e) => {\n        e.preventDefault();\n        if ( isFormValid()) {\n            dispatch( startRegisterWithEmailPasswordName( email,password,name))\n        }\n    }\n\n    const isFormValid = () => {\n\n        if ( name.trim().length ===0 ) {\n            dispatch( setError('name is required') )\n            \n            return false;\n        }\n\n        else if ( !validator.isEmail( email ) ){\n            dispatch( setError('email no es valido') )\n            return false;\n        }\n\n        else if( password !== password2 || password.length < 5 ){\n            dispatch( setError('Password should be at least 5 character and match each other') )\n            return false\n        }\n        dispatch( removeError() )\n        return true;\n    }\n    \n   \n    return (\n        <div className=\"relative\">\n            \n                \n           <h3 className=\"auth__title\">Register</h3>\n\n           <form onSubmit={handleRegister}>\n\n               {\n                   msgError &&\n                   (\n                        <div className=\"auth__alert-error\">\n                        {msgError}\n                        </div>\n                    )\n                }\n\n                <input\n                    className=\"auth__input\"\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    autoComplete=\"off\"\n                    value={ name }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                    className=\"auth__input\"\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                    className=\"auth__input\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <input\n                    className=\"mb-5 auth__input \"\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    name=\"password2\"\n                    value={ password2 }\n                    onChange={ handleInputChange }\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n    \n                Register\n                </button>\n           \n                <Link to=\"/auth/login\" className=\"link\">\n                    Already registered?\n                </Link>\n\n           </form>\n                </div>\n    )\n}\n","import React, { useRef, useState } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport { LoginScreen } from '../components/auth/LoginScreen'\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\n\nexport const AuthRouter = ({location,match}) => {\n    \n    \n    const timeout = { enter: 1600, exit: 1600 }\n\n    const [alto,] = useState()\n    \n    \n    \n    const pTag = useRef();\n    \n    \n    \n    // useLayoutEffect(() => {\n    //     setAlto(`${pTag.current.clientHeight}px`)\n    //     console.log(pTag.current.clientHeight)\n    // }, [])\n    \n    const mystyle = {\n        height: alto\n      };\n      \n    return (\n        <div className=\"auth__main relative\">\n            <div ref={pTag} style={mystyle} className=\"auth__box-container\">\n\n                <TransitionGroup className=\"grilla-login\"> \n\n                    <CSSTransition\n                    timeout={timeout}\n                    classNames='page'\n                    key={location.pathname}\n                    \n                    >\n                        <Switch location={location}>\n                            <Route exact path={`${match.url}/login`} component={LoginScreen}/>\n                            \n                            <Route exact path={`${match.url}/register`} component={RegisterScreen}/>\n                            \n                            <Redirect to=\"/auth/login\"/>\n                        </Switch>\n                    </CSSTransition>\n\n                </TransitionGroup>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startSaveNotes, startUploading } from '../../actions/notes'\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n    const { active } = useSelector(state => state.notes)\n\n    const handleSave = () => {\n        dispatch( startSaveNotes( active ))\n    }\n\n    const handlePictureClick = () => {\n        document.querySelector('#fileSelector').click();\n    }\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if ( file ) {\n            dispatch( startUploading( file ) )\n        }\n    }\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>28 de Agosto 2020</span>\n            <input\n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"file\"\n                style={{ display: 'none'}}\n                onChange={ handleFileChange }\n            />\n            <div>\n                <button\n                    className=\"btn\"\n                    onClick={ handlePictureClick }\n                >\n                    Picture\n                </button>\n                \n                <button className=\"btn\" onClick={ handleSave }>\n                    Save\n                </button>\n                \n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { activeNote, startDeleting } from '../../actions/notes';\nimport { useForm } from '../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar'\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch()\n\n    const { active:note } = useSelector(state => state.notes);\n    const [ formValues, handleInputChange, reset] = useForm( note );\n    const { body, title, id } = formValues;\n\n    const activeId = useRef( note.id )\n    \n\n    useEffect(() => {\n        \n        if ( note.id !== activeId.current ){\n            reset( note );\n            activeId.current = note.id\n        }\n        \n    }, [note, reset]);\n\n    useEffect(() => {\n        dispatch( activeNote( formValues.id, {...formValues}) )\n    }, [formValues, dispatch]);\n\n    const handleDelete = () => {\n        dispatch(startDeleting( id  ));\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n            <NotesAppBar/>\n\n            <div className=\"notes__content\">\n                \n                <input\n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    value={title}\n                    name=\"title\"\n                    onChange={handleInputChange}\n                />\n\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    value={body} \n                    name=\"body\"\n                    onChange={handleInputChange}\n                ></textarea>\n\n                {\n                    (note.url)\n                    &&\n                    (<div className=\"notes__image\">\n                        <img \n                            src={note.url}\n                            alt=\"imagen\"\n                        />\n                    </div>)\n                }\n\n            </div>\n            \n            <button\n                className=\"btn btn-danger\"\n                onClick={ handleDelete }\n                >\n                delete\n            </button>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select Someting\n                <br/>\n                pr create an entry\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n        </div>\n    )\n}\n","import React from 'react'\nimport moment from 'moment'\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\nimport { CSSTransition } from 'react-transition-group';\n\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n    \n    const noteDate = moment(date);\n\n    const dispatch = useDispatch();\n\n    const handleEntryClick = () => {\n        dispatch(activeNote(id,{\n            date, title, body, url\n        }))\n    }\n\n    return (\n\n        \n        <div className=\"journal__entry pointer\" onClick={handleEntryClick}>\n            {\n                url &&\n                <div\n                className=\"journal__entry-picture\"\n                style={{\n                    backgroundSize:'cover',\n                    backgroundImage: `url(${url})`}}\n                ></div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    {title}\n                </p>\n                <p className=\"journal__entry-content\">\n                    {body}\n                </p>\n            </div>\n            <div className=\"journal__entry-date-box\">\n                <span>{ noteDate.format('dddd')}</span>\n                <h4>{ noteDate.format('Do')}</h4>\n            </div>\n        </div>\n        \n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const { notes } = useSelector(state => state.notes)\n\n\n    return (\n        \n        <div className=\"journal__entries\">\n            <TransitionGroup>\n             {\n                 notes.map( note => (\n                    <CSSTransition\n                    key={note.id}\n                    timeout={500}\n                    classNames=\"item\"\n                  >\n                     <JournalEntry\n                     key={ note.id }\n                     { ...note } \n                     />\n                     </CSSTransition>\n                     ))\n                    }\n                    </TransitionGroup>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { StartLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\nimport { JournalEntries } from './JournalEntries'\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n\n    const { name } = useSelector(state => state.auth)\n\n    const handleLogout = ()  => {\n        dispatch( StartLogout() )\n    }\n\n    const handleAddNew = () => {\n        dispatch( startNewNote() );\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\" />\n                    <span>{ name }</span>\n                </h3>\n\n                <button\n                    onClick={handleLogout}\n                    className=\"btn\">\n                    Logout\n                </button>\n\n            </div>\n                <div className=\"journal__new-entry\" onClick={ handleAddNew }>\n                    <i className=\"far fa-calendar-plus fa-5x\"></i>\n                    <p className=\"mt-5\">New entry</p>\n            </div>\n\n            <JournalEntries />\n            \n        </aside >\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\n\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { NothingSelected } from './NothingSelected';\nimport { Sidebar } from './Sidebar';\n\nexport const JournalScreen = ({history}) => {\n\n    const { auth } = useSelector( state => state.ui );\n    const { active} = useSelector( state => state.notes );\n    \n\n    return (\n        <div className=\"journal__main-content relative\">\n            {auth\n            ?(\n                <>\n            <Sidebar/>\n\n            <main>\n\n                {\n                    (active)\n                    ?(<NoteScreen/>)\n                    :(<NothingSelected/>)\n                    \n                }\n                {/* <NothingSelected/> */}\n            </main>\n            </>\n\n            )\n            :(\n                <></>\n            )\n\n            }\n        </div>\n    )\n}\n","\nimport React from 'react'\n\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\nimport { JournalScreen } from '../components/journal/JournalScreen'\n\n\nexport const JournalRouter = ({location,match}) => {\n    \n\n    const timeout = { enter: 1600, exit: 1600 }\n\n\n    \n     \n    \n\n    \n    \n      \n    return (\n        \n\n                <TransitionGroup className=\"relative\"> \n\n                    <CSSTransition\n                    timeout={timeout}\n                    classNames='page'\n                    key={location.pathname}\n                    \n                    >\n                        <Switch location={location}>\n\n                            \n                            \n                                <Route exact path={`${match.url}/home`} component={JournalScreen}/>\n                                <Route exact path={`${match.url}/otro`} component={JournalScreen}/>\n                                <Redirect to={`${match.url}/home`}/>\n                               \n\n\n                            \n                        </Switch>\n                    </CSSTransition>\n\n                </TransitionGroup>\n            \n    )\n}\n","import { firebase } from '../firebase/firebase-config';\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport {\n    Switch,\n    Route,\n    withRouter,\n    Redirect\n\n  } from \"react-router-dom\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport { login } from '../actions/auth';\nimport { AuthRouter } from './AuthRouter'\nimport { JournalRouter } from './JournalRouter'\nimport { isAuth, notAuth } from '../actions/ui';\nimport { startLoadingNotes } from '../actions/notes'\n\n\nconst AppRouter = ({location,match,history}) => {\n\n\n    const currentKey = location.pathname.split('/')[1] || '/'\n    const timeout = { enter: 1600, exit: 1600 }\n\n    const dispatch = useDispatch();\n\n    const [checking, setChecking] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n    \n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged( (user) => {\n            if ( user?.uid ) {\n                dispatch( login( user.uid, user.displayName ));\n                setIsLoggedIn( true );\n                history.replace(`${match.url}journal/home`);\n                dispatch( isAuth() );\n                dispatch(startLoadingNotes( user.uid ))\n            } else {\n                setIsLoggedIn( false );\n                history.replace('/auth/login');\n                setTimeout(() => {\n                    dispatch( notAuth() );\n                }, 1600);\n            }\n            setChecking(false);\n        })\n    }, [ dispatch, setChecking, setIsLoggedIn, history,match.url ])\n\n    if ( checking ) {\n        return (\n            <h1>Espere...</h1> \n        )\n    }\n    \n    return (\n        \n                <TransitionGroup className=\"grilla-login\">\n                    <CSSTransition\n                    timeout={timeout}\n                    classNames='page'\n                    key={currentKey}\n                    \n                    >\n                            <Switch location={location}>\n                                <Route path={`${match.url}journal`} isLoggedIn={isLoggedIn} component={JournalRouter}/>\n                                <Route path={`${match.url}auth`}component={AuthRouter}/>\n                                <Redirect to=\"/auth/login\"/>\n                            </Switch>\n                            </CSSTransition>\n                </TransitionGroup>\n            \n    )\n}\n\nexport default withRouter(AppRouter)\n","\nimport { types } from '../types/types';\n\nconst initialState = {\n    auth: false,\n}\n\nexport const authReducer = ( state= initialState, action) => {\n    switch (action.type) {\n        case types.login:\n            \n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n        case types.logout:\n            \n                return initialState\n    \n        default:\n            return state;\n    }\n}\n","\nimport { types } from '../types/types';\n\n\nconst initialState = {\n    loading: false,\n    msgError: null,\n    auth:false\n}\nexport const uiReducer = ( state = initialState, action  ) => {\n    \n    switch ( action.type ) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null\n            }\n            case types.uiFinishLoading:\n                return {\n                    ...state,\n                    loading: false\n                }\n            case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n            case types.uiIsAuth:\n            return {\n                ...state,\n                auth: true\n            }\n            case types.uiNotAuth:\n            return {\n                ...state,\n                auth: false\n            }\n        \n    \n        default:\n            return state;\n    }\n\n}\n","import { types } from \"../types/types\";\n\n\nconst initialstate = {\n    notes: [],\n    active: null\n}\n\nexport const notesReducer = ( state = initialstate, action ) => {\n    \n    switch (action.type) {\n        \n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n\n        case types.notesAddNew:\n            return {\n                ...state,\n                notes: [ action.payload, ...state.notes ]\n            }\n        \n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [ ...action.payload ]\n            }\n        \n        case types.notesUpdated:\n            return {\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id\n                        ? action.payload.note\n                        : note\n                )\n            }\n\n        case types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter( note => note.id !== action.payload )\n            }\n        case types.notesLogoutCleaning:\n            return {\n                ...state,\n                active: null,\n                notes: []\n            }\n    \n        default:\n            return state;\n    }\n\n}\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'\nimport { authReducer } from '../reducers/authReducer';\nimport thunk from 'redux-thunk';\nimport { uiReducer } from '../reducers/uiReducer';\nimport { notesReducer } from '../reducers/notesReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer\n});\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n    );","import React from 'react'\nimport {Provider} from 'react-redux'\nimport {BrowserRouter} from 'react-router-dom';\nimport AppRouter  from './routers/AppRouter'\nimport { store } from './store/store';\n\nexport const JournalApp = () => {\n    return (\n\n            <BrowserRouter>\n                <Provider store={ store }>\n                    <AppRouter/>\n                </Provider>\n            </BrowserRouter>\n        \n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss'\nimport { JournalApp } from './JournalApp';\n\n\nReactDOM.render(\n  \n    <JournalApp />\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}